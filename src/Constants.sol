// SPDX-License-Identifier: MIT
pragma solidity 0.8.28;

import { TestBase } from "forge-std/Test.sol";

library Protocol {
    address constant DEPLOYER = 0xFE11a5009f2121622271e7dd0FD470264e076af6;
    uint256 constant PROTOCOL_ID_CURVE = 0;
    uint256 constant PROTOCOL_ID_FRAX = 1;

    // Core Protocol
    address constant CORE = 0xc07e000044F95655c11fda4cD37F70A94d7e0a7d;
    address constant GOV_TOKEN = 0x419905009e4656fdC02418C7Df35B1E61Ed5F726;
    address constant VEST_MANAGER = 0x6666666677B06CB55EbF802BB12f8876360f919c;
    address constant STABLECOIN = 0x57aB1E0003F623289CD798B1824Be09a793e4Bec;
    address constant REGISTRY = 0x10101010E0C3171D894B71B3400668aF311e7D94;
    address constant GOV_STAKER = 0x22222222E9fE38F6f1FC8C61b25228adB4D8B953;
    address constant AUTO_STAKE_CALLBACK = 0x4888205F02df9832274d470C685baA728f128745;
    address constant VOTER_DEPRECATED = 0x11111111084a560ea5755Ed904a57e5411888C28;
    address constant VOTER_DEPRECATED_2 = 0x11111111408bd67B92C4f74B9D3cF96f1fa412BC;
    address constant VOTER_DEPRECATED_3 = 0x111111110d3e18e73CC2227A40B565043266DaC1;
    address constant VOTER = 0x11111111063874cE8dC6232cb5C1C849359476E6;
    address constant EMISSIONS_CONTROLLER = 0x33333333df05b0D52edD13D230461E5A0f5a4706;
    address constant TREASURY = 0x4444444455bF42de586A88426E5412971eA48324;
    address constant PAIR_DEPLOYER_V1 = 0x5555555524De7C56C1B20128dbEAace47d2C0417;
    address constant PAIR_DEPLOYER_V2 = 0x5555555558B7309ecB0FbB23e609ec3c6f74C2Ea;
    address constant INTEREST_RATE_CALCULATOR = 0x77777777729C405efB6Ac823493e6111F0070D67;
    address constant SREUSD = 0x557AB1e003951A73c12D16F0fEA8490E39C33C35;
    address constant INTEREST_RATE_CALCULATOR_V2 = 0x77777770a0a6304365cd2CE7f608A2179fc06EEB;
    address constant PRICE_WATCHER = 0xAaaa0013e2ec451F76816d1e0a02ABA596dd9251;
    address constant PERMA_STAKER_CONVEX = 0xCCCCCccc94bFeCDd365b4Ee6B86108fC91848901;
    address constant PERMA_STAKER_YEARN = 0x12341234B35c8a48908c716266db79CAeA0100E8;

    // Operators
    address constant OPERATOR_GUARDIAN_OLD = 0x0950000dd946D519B53424830075364e90B7eFB1;
    address constant OPERATOR_TREASURY_MANAGER_OLD = 0x09500006956d172973138a5b38CFcd2277552BB9;
    address constant BORROW_LIMIT_CONTROLLER = 0x0950000465476F4470e74AeD93E7dd414012BB7D;
    address constant OPERATOR_GUARDIAN_PROXY = 0xA4745e0B1F40ab3DCFD98F381835De591a8974E3;
    address constant OPERATOR_TREASURY_MANAGER_PROXY = 0x4CF97a55d58Aad14C493A46C8151a0BFffb10403;
    address constant PAIR_ADDER = 0x09500002956877b910ACEc25C4b4dd57950e1D27;
    
    // Oracles
    address constant BASIC_VAULT_ORACLE_OLD = 0xcb7E25fbbd8aFE4ce73D7Dac647dbC3D847F3c82;
    address constant BASIC_VAULT_ORACLE = 0xa346BA5E838D6Ee40204A69549c81AB982644150;
    address constant UNDERLYING_ORACLE = 0x414CFAFa12FeE1260114BCd22058D5293da27c94;
    
    // Handlers
    address constant REDEMPTION_HANDLER = 0x9999999b8ce70322b021EFe340759B7958af43C8;
    address constant LIQUIDATION_HANDLER = 0x88888888c227c36401493Ed9F3e3Dcc3800B2634;
    address constant REWARD_HANDLER = 0x74747408065d6A85DFf07D23F22C921Ce7D0b4B1;
    address constant REWARD_HANDLER_OLD = 0xdBF41092e1E310a2B48B0895095EfF6d341D8F00;
    
    // Receivers
    address constant SIMPLE_RECEIVER_IMPLEMENTATION = 0x2D4e8Bff0c23571016d7b329b9Fd76441f4a37c9;
    address constant SIMPLE_RECEIVER_FACTORY = 0x20d55f2bb72ebDe67A4325FB757348ea3d9014D8;
    address constant DEBT_RECEIVER = 0x70a1879aEeA28072E321d52427f0aC88603dF61b;
    address constant INSURANCE_POOL_RECEIVER = 0x8b36aD6A6605745529908C90cCC90F05901155b4;
    address constant LIQUIDITY_INCENTIVES_RECEIVER = 0xC9a9C21F8740684129d271Ad1007E87E24858c59;
    address constant RETENTION_RECEIVER = 0x6E7D5dade33f76F480EA38E3c47f870de74906F1;
    
    // Fees Distribution and Emissions Streams
    address constant FEE_DEPOSIT = 0x07Ad4630985ADe5B5307806C43E57e0A9A932C52;
    address constant FEE_DEPOSIT_CONTROLLER = 0xC700000506423Bad12d5EB6D55b35EA9F5384Df6;
    address constant FEE_DEPOSIT_CONTROLLER_OLD = 0x7E3D2F480AbbA95863040D763DDe8F30D100C6F5;
    address constant FEE_LOGGER = 0x1099370Bd8e48dD79A703f12EF59168c6EF8AD03;
    address constant INSURANCE_POOL = 0x00000000efe883b3304aFf71eaCf72Dbc3e1b577;
    address constant IP_STABLE_STREAM = 0xCd32c9bf38AbfEEc2F5691Dcb39cbc9aC55f0685;
    address constant EMISSION_STREAM_INSURANCE_POOL = 0xB96699a960A2b6300889b4FB789A58B506F144Ca;
    address constant EMISSIONS_STREAM_PAIR = 0x11D5Bc6175E416ECCe06d7c94F232E6c7330fDd3;    
    address constant RETENTION_INCENTIVES = 0xB9415639618e70aBb71A0F4F8bbB2643Bf337892;

    // Misc
    address constant UTILITIES = 0x2B2df195212766FD87fDc8415D67E5Aba5dCaa04;
    address constant SWAPPER = 0x042f48346be16Be381190a7397A80808243f3b2e;
    address constant SWAPPER_ODOS = 0x3Ae884D1a67650501278001FDa40DCa975D9194D;
    address constant KEEPER_PROXY = 0x49F6D2B208006fdB5a42CE71C4339150ecBD4761;
    
    
    // Pools and Gauges
    address constant REUSD_SCRVUSD_POOL = 0xc522A6606BBA746d7960404F22a3DB936B6F4F50;
    address constant REUSD_SFRXUSD_POOL = 0xed785Af60bEd688baa8990cD5c4166221599A441;
    address constant REUSD_SDOLA_POOL = 0x48d670D189B4b48757992D36897bCa6E3f889040;
    address constant REUSD_FXUSD_POOL = 0xb0ef04ACE97d350E24Efa5139d2590D26a61A8Dc;
    address constant WETH_RSUP_POOL = 0xEe351f12EAE8C2B8B9d1B9BFd3c5dd565234578d;
    address constant REUSD_SCRVUSD_GAUGE = 0xaF01d68714E7eA67f43f08b5947e367126B889b1;
    address constant REUSD_SFRXUSD_GAUGE = 0x5C0B03914f68F2717d779a0211fd98C2CC45a4dD;
    address constant REUSD_SDOLA_GAUGE = 0xCB25249bFA8CdB6012a75070E5C2885151368Bef;
    address constant REUSD_FXUSD_GAUGE = 0xf84657ca6Db485EA38c63ca96dc396c2b3c6fdcC;
    address constant WETH_RSUP_GAUGE = 0x09F62a6777032329C0d49F1FD4fBe9b3468CDa56;

    // CurveLend Pairs
    address constant PAIR_CURVELEND_SFRXUSD_CRVUSD = 0xC5184cccf85b81EDdc661330acB3E41bd89F34A1;
    address constant PAIR_CURVELEND_SDOLA_CRVUSD = 0x27AB448a75d548ECfF73f8b4F36fCc9496768797;
    address constant PAIR_CURVELEND_SDOLA_CRVUSD_DEPRECATED = 0x08064A8eEecf71203449228f3eaC65E462009fdF;
    address constant PAIR_CURVELEND_SUSDE_CRVUSD = 0x39Ea8e7f44E9303A7441b1E1a4F5731F1028505C;
    address constant PAIR_CURVELEND_USDE_CRVUSD = 0x3b037329Ff77B5863e6a3c844AD2a7506ABe5706;
    address constant PAIR_CURVELEND_TBTC_CRVUSD_DEPRECATED = 0x22B12110f1479d5D6Fd53D0dA35482371fEB3c7e;
    address constant PAIR_CURVELEND_WBTC_CRVUSD = 0x2d8ecd48b58e53972dBC54d8d0414002B41Abc9D;
    address constant PAIR_CURVELEND_WETH_CRVUSD = 0xCF1deb0570c2f7dEe8C07A7e5FA2bd4b2B96520D;
    address constant PAIR_CURVELEND_WSTETH_CRVUSD = 0x4A7c64932d1ef0b4a2d430ea10184e3B87095E33;
    address constant PAIR_CURVELEND_WSTUR_CRVUSD = 0x6e90c85a495d54c6d7E1f3400FEF1f6e59f86bd6;
    
    // FraxLend Pairs
    address constant PAIR_FRAXLEND_SFRXETH_FRXUSD = 0x3F2b20b8E8Ce30bb52239d3dFADf826eCFE6A5f7;
    address constant PAIR_FRAXLEND_SUSDE_FRXUSD = 0x212589B06EBBA4d89d9deFcc8DDc58D80E141EA0;
    address constant PAIR_FRAXLEND_WBTC_FRXUSD_DEPRECATED = 0x55c49c707aA0Ad254F34a389a8dFd0d103894aDb;
    address constant PAIR_FRAXLEND_WBTC_FRXUSD = 0xb5575Fe3d3b7877415A166001F67C2Df94D4e6c1;
    address constant PAIR_FRAXLEND_SCRVUSD_FRXUSD = 0x24CCBd9130ec24945916095eC54e9acC7382c864;
}

library Prisma {
    address constant PRISMA_CORE = 0x5d17eA085F2FF5da3e6979D5d26F1dBaB664ccf8;
    address constant VOTER_PROXY = 0x490b8C6007fFa5d3728A49c2ee199e51f05D2F7e;
    address constant FEE_RECEIVER = 0xfdCE0267803C6a0D209D3721d2f01Fd618e9CBF8;
    address constant PSM_MKUSD = 0x9d7634b2B99c2684611c0Ac3150bAF6AEEa4Ed77;
    address constant PSM_ULTRA = 0xAe21Fe5B61998b143f721CE343aa650a6d5EadCe;
}

library VMConstants {
    address constant FRAX_VEST_TARGET = 0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27;
    uint256 constant MAX_REDEEMABLE = 173_153_585e18;

    // Merkle Roots
    bytes32 constant TEAM_MERKLE_ROOT = 0x0fcbbf4e3adc67cd5905f026171c412aebb07225e21f55c3b8a6683a8c9e36c9;
    bytes32 constant VICTIMS_MERKLE_ROOT = 0x706fe5d7fc617632ac4600bf675ece0a444b89de29ca64e264af97e61665b6bb;
    bytes32 constant PENALTY_MERKLE_ROOT = 0x32dd6fe7704303e2869d1763aed86c04f3c771cb3feb5975da5f83a67b890cd2;

    uint256 constant DURATION_PERMA_STAKER = 365 days * 5;
    uint256 constant DURATION_TREASURY = 365 days * 5;
    uint256 constant DURATION_REDEMPTIONS = 365 days * 5;
    uint256 constant DURATION_AIRDROP_LOCK_PENALTY = 365 days * 5;
    uint256 constant DURATION_AIRDROP_VICTIMS = 365 days * 2;
    uint256 constant DURATION_LICENSING = 365 days * 1;
    uint256 constant DURATION_AIRDROP_TEAM = 365 days * 1;
    

    uint256 constant ALLOC_PERMA_STAKER_1 = 333333333333333333;
    uint256 constant ALLOC_PERMA_STAKER_2 = 166666666666666666;
    uint256 constant ALLOC_LICENSING = 8333333333333334;
    uint256 constant ALLOC_TREASURY = 175000000000000000;
    uint256 constant ALLOC_REDEMPTIONS = 250000000000000000;
    uint256 constant ALLOC_AIRDROP_TEAM = 33333333333333333;
    uint256 constant ALLOC_AIRDROP_VICTIMS = 33333333333333334;
    uint256 constant ALLOC_AIRDROP_LOCK_PENALTY = 0;
}

library Mainnet {
    uint256 internal constant CHAIN_ID = 1;
    address internal constant CONVEX_DEPLOYER = 0x947B7742C403f20e5FaCcDAc5E092C943E7D0277;
    address internal constant CONVEX_BOOSTER = 0xF403C135812408BFbE8713b5A23a04b3D48AAE31;
    address internal constant CRV_ERC20 = 0xD533a949740bb3306d119CC777fa900bA034cd52;
    address internal constant CVX_ERC20 = 0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B;
    address internal constant FRXUSD_ERC20 = 0xCAcd6fd266aF91b8AeD52aCCc382b4e165586E29;
    address internal constant SFRXUSD_ERC20 = 0xcf62F905562626CfcDD2261162a51fd02Fc9c5b6;
    address internal constant CRVUSD_ERC20 = 0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E;
    address internal constant SCRVUSD_ERC20 = 0x0655977FEb2f289A4aB78af67BAB0d17aAb84367;

    // Curve Misc
    address internal constant CURVE_STABLE_FACTORY = 0x6A8cbed756804B16E05E741eDaBd5cB544AE21bf;
    address internal constant CURVE_ESCROW = 0x5f3b5DfEb7B28CDbD7FAba78963EE202a494e2A2;
    address internal constant CURVE_GAUGE_CONTROLLER = 0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB;

    //fraxlend
    address internal constant FRAXLEND_SFRXETH_FRXUSD = 0xaB3cb84c310186B2Fa4B4503624A5D90b5DcB22D;
    address internal constant FRAXLEND_SUSDE_FRXUSD = 0x28Cdf6Ce79702AAeFbF217cF98cbD11f5639B9f1;
    address internal constant FRAXLEND_WBTC_FRXUSD_DEPRECATED = 0x37110563E3856D413B821f07C7E3991c4493673D;
    address internal constant FRAXLEND_WBTC_FRXUSD = 0x8E5f09de0cD7841239410F929A905E214443d9E0;
    address internal constant FRAXLEND_SCRVUSD_FRXUSD = 0x8087346b8865e5B0bF9F8A49742c2D83f6a50a6c;

    //curvelend
    address internal constant CURVE_ONE_WAY_LENDING_FACTORY = 0xeA6876DDE9e3467564acBeE1Ed5bac88783205E0;
    address internal constant CURVELEND_SDOLA_CRVUSD = 0x14361C243174794E2207296a6AD59bb0Dec1d388;
    address internal constant CURVELEND_SUSDE_CRVUSD = 0x4a7999c55d3a93dAf72EA112985e57c2E3b9e95D;
    address internal constant CURVELEND_USDE_CRVUSD = 0xc687141c18F20f7Ba405e45328825579fDdD3195;
    address internal constant CURVELEND_TBTC_CRVUSD_DEPRECATED = 0xb2b23C87a4B6d1b03Ba603F7C3EB9A81fDC0AAC9;
    address internal constant CURVELEND_WBTC_CRVUSD = 0xccd37EB6374Ae5b1f0b85ac97eFf14770e0D0063;
    address internal constant CURVELEND_WETH_CRVUSD = 0x8fb1c7AEDcbBc1222325C39dd5c1D2d23420CAe3;
    address internal constant CURVELEND_WSTETH_CRVUSD = 0x21CF1c5Dc48C603b89907FE6a7AE83EA5e3709aF;
    address internal constant CURVELEND_YNETH_CRVUSD = 0x52036c9046247C3358c987A2389FFDe6Ef8564c9;
    address internal constant CURVELEND_SFRXUSD_CRVUSD = 0x8E3009b59200668e1efda0a2F2Ac42b24baa2982;
    address internal constant CURVELEND_SDOLA2_CRVUSD = 0x992B77179A5cF876bcD566FF4b3EAE6482012B90;
    uint256 internal constant CURVELEND_SDOLA_CRVUSD_ID = 384;
    uint256 internal constant CURVELEND_SUSDE_CRVUSD_ID = 361;
    uint256 internal constant CURVELEND_USDE_CRVUSD_ID = 371;
    uint256 internal constant CURVELEND_TBTC_CRVUSD_ID = 328;
    uint256 internal constant CURVELEND_WBTC_CRVUSD_ID = 344;
    uint256 internal constant CURVELEND_WETH_CRVUSD_ID = 365;
    uint256 internal constant CURVELEND_WSTETH_CRVUSD_ID = 364;
    uint256 internal constant CURVELEND_YNETH_CRVUSD_ID = 415;
    uint256 internal constant CURVELEND_SFRXUSD_CRVUSD_ID = 438;
    uint256 internal constant CURVELEND_SDOLA2_CRVUSD_ID = 445;

    // LayerZero
    address internal constant LAYERZERO_ENDPOINTV2 = 0x1a44076050125825900e736c501f859c50fE728c;

    // Convex
    address internal constant CONVEX_POOL_MANAGER = 0x6D3a388e310aaA498430d1Fe541d6d64ddb423de;
}

library Sepolia {
    uint256 internal constant CHAIN_ID = 11155111;
    address internal constant LAYERZERO_ENDPOINTV2 = 0x6EDCE65403992e310A62460808c4b910D972f10f;
}

abstract contract Helper is TestBase {
    constructor() {
        labelConstants();
    }

    function labelConstants() public {
        vm.label(0x947B7742C403f20e5FaCcDAc5E092C943E7D0277, "Constants.CONVEX_DEPLOYER");
        vm.label(0xF403C135812408BFbE8713b5A23a04b3D48AAE31, "Constants.CONVEX_BOOSTER");
        vm.label(0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0, "Constants.FXS_ERC20");
        vm.label(0x5E8422345238F34275888049021821E8E08CAa1f, "Constants.FRXETH_ERC20");
        vm.label(0xac3E018457B222d93114458476f3E3416Abbe38F, "Constants.SFRXETH_ERC20");
        vm.label(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2, "Constants.WETH_ERC20");
        vm.label(0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599, "Constants.WBTC_ERC20");
        vm.label(0xD533a949740bb3306d119CC777fa900bA034cd52, "Constants.CRV_ERC20");
        vm.label(0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B, "Constants.CVX_ERC20");
        vm.label(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48, "Constants.USDC_ERC20");
        vm.label(0xCAcd6fd266aF91b8AeD52aCCc382b4e165586E29, "Constants.FRXUSD_ERC20");
        vm.label(0xcf62F905562626CfcDD2261162a51fd02Fc9c5b6, "Constants.SFRXUSD_ERC20");
        vm.label(0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E, "Constants.CRVUSD_ERC20");
        vm.label(0x0655977FEb2f289A4aB78af67BAB0d17aAb84367, "Constants.SCRVUSD_ERC20");
        vm.label(0x6A8cbed756804B16E05E741eDaBd5cB544AE21bf, "Constants.CURVE_STABLE_FACTORY");
    }
}

library Fraxtal {
    uint256 internal constant CHAIN_ID = 252;
    address internal constant WFRXETH_ERC20 = 0xFC00000000000000000000000000000000000006;
    address internal constant SFRXETH_ERC20 = 0xFC00000000000000000000000000000000000005;
    address internal constant FPIS_ERC20 = 0xfc00000000000000000000000000000000000004;
    address internal constant FPI_ERC20 = 0xFc00000000000000000000000000000000000003;
    address internal constant FXS_ERC20 = 0xFc00000000000000000000000000000000000002;
    address internal constant FRXUSD_ERC20 = 0xFc00000000000000000000000000000000000001;
    address internal constant SFRXUSD_ERC20 = 0xfc00000000000000000000000000000000000008;
    address internal constant FRXBTC_ERC20 = 0xfC00000000000000000000000000000000000007;
    // LayerZero
    address internal constant LAYERZERO_ENDPOINTV2 = 0x1a44076050125825900e736c501f859c50fE728c;
}

library DeploymentConfig {
    address constant DEPLOYER = 0xFE11a5009f2121622271e7dd0FD470264e076af6;
    address constant FRAX_VEST_TARGET = 0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27;
    address constant PRISMA_TOKENS_BURN_ADDRESS = address(0xdead);
    uint256 constant EPOCH_LENGTH = 1 weeks;
    uint24 constant STAKER_COOLDOWN_EPOCHS = 2;

    // Token configuration
    uint256 constant GOV_TOKEN_INITIAL_SUPPLY = 60_000_000e18;
    string constant GOV_TOKEN_NAME = "Resupply";
    string constant GOV_TOKEN_SYMBOL = "RSUP";

    // PermaStaker
    string constant PERMA_STAKER_CONVEX_NAME = "Resupply PermaStaker: Convex";
    string constant PERMA_STAKER_YEARN_NAME = "Resupply PermaStaker: Yearn";
    address constant PERMA_STAKER_CONVEX_OWNER = 0xa3C5A1e09150B75ff251c1a7815A07182c3de2FB;
    address constant PERMA_STAKER_YEARN_OWNER = 0xFEB4acf3df3cDEA7399794D0869ef76A6EfAff52;

    // Emissions weights (1e4 precision)
    uint256 constant INITIAL_EMISSIONS_WEIGHT_DEBT = 2500;
    uint256 constant INITIAL_EMISSIONS_WEIGHT_INSURANCE_POOL = 2500;
    uint256 constant INITIAL_EMISSIONS_WEIGHT_LP = 5000;

    // Voter configuration (1e4 precision)
    uint256 constant VOTER_MIN_CREATE_PROPOSAL_PCT = 100;
    uint256 constant VOTER_QUORUM_PCT = 3000;

    // Emissions controller configuration (rates are 1e18 precision)
    uint256 constant EMISSIONS_SCHEDULE_YEAR_1 = 183143319640535100;
    uint256 constant EMISSIONS_SCHEDULE_YEAR_2 = 130573632743654969;
    uint256 constant EMISSIONS_SCHEDULE_YEAR_3 = 93429770042296321;
    uint256 constant EMISSIONS_SCHEDULE_YEAR_4 = 64756001614012807;
    uint256 constant EMISSIONS_SCHEDULE_YEAR_5 = 40950214498301975;
    uint256 constant EMISSIONS_CONTROLLER_TAIL_RATE = 19860811573103551;
    uint256 constant EMISSIONS_CONTROLLER_EPOCHS_PER = 52;
    uint256 constant EMISSIONS_CONTROLLER_BOOTSTRAP_EPOCHS = 0;

    // Configs: Protocol
    uint256 constant DEFAULT_BORROW_LIMIT = 1_000_000e18;
    uint256 constant DEFAULT_MAX_LTV = 95_000; // 1e5 precision
    uint256 constant DEFAULT_LIQ_FEE = 5_000;  // 1e5 precision
    uint256 constant DEFAULT_MINT_FEE = 0;     // 1e5 precision
    uint256 constant DEFAULT_PROTOCOL_REDEMPTION_FEE = 2e17; // portion of fee for stakers (1e18 precision)
    uint256 constant FEE_SPLIT_IP = 1000;      // 1e4 precision
    uint256 constant FEE_SPLIT_TREASURY = 500; // 1e4 precision
    uint256 constant FEE_SPLIT_STAKERS = 7000; // 1e4 precision
    uint256 constant FEE_SPLIT_SREUSD = 1500; // 1e4 precision

    // Tokens
    address constant SCRVUSD = Mainnet.SCRVUSD_ERC20;
    address constant SFRXUSD = Mainnet.SFRXUSD_ERC20;
    address constant CURVE_STABLE_FACTORY = Mainnet.CURVE_STABLE_FACTORY;

    // SafeHelper
    uint256 constant MAX_GAS_PER_BATCH = 15_000_000;
}

library CreateX {
    address internal constant CREATEX_DEPLOYER = 0xba5Ed099633D3B313e4D5F7bdc1305d3c28ba5Ed;
    // Salts
    bytes32 internal constant SALT_GOV_TOKEN = 0xfe11a5009f2121622271e7dd0fd470264e076af6007817270164e1790196c4f0; // 0x419905
    bytes32 internal constant SALT_STABLECOIN = 0xfe11a5009f2121622271e7dd0fd470264e076af6007d4a011e1aea8d0220315d; // 0x57ab1e
    bytes32 internal constant SALT_SREUSD = 0xfe11a5009f2121622271e7dd0fd470264e076af6008c41ce95d454d703df40f9; // 0x557ab1e
    bytes32 internal constant SALT_CORE = 0xfe11a5009f2121622271e7dd0fd470264e076af60075182fe1eff89e02ce3cff; // 0xc07e0000
    bytes32 internal constant SALT_REGISTRY = 0xfe11a5009f2121622271e7dd0fd470264e076af60035199030be4b0602635825; // 0x1010101
    bytes32 internal constant SALT_INSURANCE_POOL = 0xfe11a5009f2121622271e7dd0fd470264e076af600bd0b20142b743201bee438; // 0x000000
    bytes32 internal constant SALT_VOTER_OLD_1 = 0xfe11a5009f2121622271e7dd0fd470264e076af60005f722dce9505702447be8; // 0x11111
    bytes32 internal constant SALT_VOTER_OLD_2 = 0xfe11a5009f2121622271e7dd0fd470264e076af600894b211646694b023a6d1f; // 0x11111
    bytes32 internal constant SALT_VOTER = 0xfe11a5009f2121622271e7dd0fd470264e076af600ff8e61a48d60de03869d9f; // 0x11111
    bytes32 internal constant SALT_GOV_STAKER = 0xfe11a5009f2121622271e7dd0fd470264e076af600ac101fb2686a8c0015ef91; // 0x22222
    bytes32 internal constant SALT_EMISSIONS_CONTROLLER = 0xfe11a5009f2121622271e7dd0fd470264e076af60045a2b62cd5fec002054177; // 0x3333
    bytes32 internal constant SALT_TREASURY = 0xfe11a5009f2121622271e7dd0fd470264e076af6003e18f2a15963dc02ebe90a; // 0x44444
    bytes32 internal constant SALT_PAIR_DEPLOYER_V1 = 0xfe11a5009f2121622271e7dd0fd470264e076af6005ae1044d7cd9aa0200df43; // 0x55555
    bytes32 internal constant SALT_PAIR_DEPLOYER_V2 = 0xfe11a5009f2121622271e7dd0fd470264e076af600a509fc660e515703819045; // 0x55555
    bytes32 internal constant SALT_VEST_MANAGER = 0xfe11a5009f2121622271e7dd0fd470264e076af6000cc7db37bf283f00158d19; // 0x66666
    bytes32 internal constant SALT_INTEREST_RATE_CALCULATOR = 0xfe11a5009f2121622271e7dd0fd470264e076af6005763a7460bd2b7038a032e; // 0x77777
    bytes32 internal constant SALT_LIQUIDATION_HANDLER = 0xfe11a5009f2121622271e7dd0fd470264e076af600574340f6003cec01964db0; // 0x88888
    bytes32 internal constant SALT_REDEMPTION_HANDLER = 0xfe11a5009f2121622271e7dd0fd470264e076af600eae4ef8787bf6f00c37509; // 0x99999
    bytes32 internal constant SALT_PERMA_STAKER_CONVEX = 0xfe11a5009f2121622271e7dd0fd470264e076af600847421d8997e1100819f27; // 0xCCCCC
    bytes32 internal constant SALT_PERMA_STAKER_YEARN = 0xfe11a5009f2121622271e7dd0fd470264e076af6005045c04e56a6ce00770772; // 0x12341234
    bytes32 internal constant SALT_OPERATOR_TREASURY_MANAGER = 0xfe11a5009f2121622271e7dd0fd470264e076af6004743fa1885004c02ae2b7e; // 0x095000
    bytes32 internal constant SALT_OPERATOR_GUARDIAN = 0xfe11a5009f2121622271e7dd0fd470264e076af6001380bed7c94ead020a25f8; // 0x095000
    bytes32 internal constant SALT_BORROW_LIMIT_CONTROLLER = 0xfe11a5009f2121622271e7dd0fd470264e076af6001b04d4d7f44d8c01b71aaa; // 0x095000
    bytes32 internal constant SALT_REUSD_ORACLE = 0xfe11a5009f2121622271e7dd0fd470264e076af6004b79bcecbf15e003d34c02; // 0x07ac1e
    
    bytes32 internal constant SALT_FEE_DEPOSIT_CONTROLLER = 0xfe11a5009f2121622271e7dd0fd470264e076af600dce625f01ad9fb026b8e53; // C700
    bytes32 internal constant SALT_REWARD_HANDLER = 0xfe11a5009f2121622271e7dd0fd470264e076af600cb52361112bedd00be275e; // 0x747474
    bytes32 internal constant SALT_PRICE_WATCHER = 0xfe11a5009f2121622271e7dd0fd470264e076af600774ac5da6526ae001aeed6; // 0xaaaa00
    bytes32 internal constant SALT_INTEREST_RATE_CALCULATOR_V2 = 0xfe11a5009f2121622271e7dd0fd470264e076af60087ad27f035c60601c8d619; // 0x77777
    bytes32 internal constant SALT_FEE_LOGGER = 0xfe11a5009f2121622271e7dd0fd470264e076af6001463bc8b7e702d00e1bc50; // 0x1099370
    bytes32 internal constant SALT_PAIR_ADDER = 0xfe11a5009f2121622271e7dd0fd470264e076af60058385547c1b50603df6c9b; // 0x0950000
    /** 
        SALTS FOR FUTURE OPERATORS TO FOLLOW 0x0950000 SCHEME
        0xfe11a5009f2121622271e7dd0fd470264e076af60022dc4c0dc6a32301563648 => 0x09500002b2ab5fab995484b05891b81d1edca715
        0xfe11a5009f2121622271e7dd0fd470264e076af6002a99d75d961e5701acceda => 0x095000080f12cd151be097d725b584053b41ad35
        0xfe11a5009f2121622271e7dd0fd470264e076af600c9b1f187e88ec700f38fac => 0x09500001256135b85bbec83707345fd865db1f83
        0xfe11a5009f2121622271e7dd0fd470264e076af600973c457185db0b00a8fb81 => 0x0950000bb4a9b3299102bee709181ec1e6100682
        0xfe11a5009f2121622271e7dd0fd470264e076af60070bd561cb52e6a00bd7fe6 => 0x0950000250cd27d27fb4b4f6e41419148d6e1ac3
        0xfe11a5009f2121622271e7dd0fd470264e076af600fec2b4042d1062007f70a5 => 0x0950000bc094568c16767135c45cdef83d8a84c9
        0xfe11a5009f2121622271e7dd0fd470264e076af6002bf63f4a33684a03b44360 => 0x09500007ad20e37398705d6e25f25cdf43210a0f
        0xfe11a5009f2121622271e7dd0fd470264e076af600cd45ff03928a9501cebac0 => 0x0950000920f5c80a46a323fff19f22ca70dabed9
        0xfe11a5009f2121622271e7dd0fd470264e076af6008557be70d183b403e1ac59 => 0x09500001fcc259a0c160a063ae78aec9fdcf69bd
        0xfe11a5009f2121622271e7dd0fd470264e076af600577cf67d63a37b03850fe2 => 0x09500003beb44dba2ac47abe21423ac52e33acee
        0xfe11a5009f2121622271e7dd0fd470264e076af600108ab4fe1e57d703eeb083 => 0x0950000f2f06074ebaf41ffdf15b088448a3084a
        0xfe11a5009f2121622271e7dd0fd470264e076af60081620eb02f479c00137499 => 0x0950000b6eab63f0d4b028bde07df7dbf952428a
        0xfe11a5009f2121622271e7dd0fd470264e076af6004806377bf8da9f016fff92 => 0x095000020e866084a8b2e493a9c8259a5a7eb95b
        0xfe11a5009f2121622271e7dd0fd470264e076af600698b55029a901e00ba9752 => 0x0950000b6cc1c3480cc1c07ab3055a4dce292348
    */
}